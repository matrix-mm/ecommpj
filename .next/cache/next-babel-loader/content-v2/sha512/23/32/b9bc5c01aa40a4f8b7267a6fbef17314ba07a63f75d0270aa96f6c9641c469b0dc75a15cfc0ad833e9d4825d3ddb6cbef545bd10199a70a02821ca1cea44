{"ast":null,"code":"import { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport React, { useContext } from 'react';\nimport { Alert } from '@material-ui/lab';\nimport Layout from '../components/Layout';\nimport { Store } from '../components/Store';\nimport { Button, Card, CircularProgress, Grid, List, ListItem, MenuItem, Select, Slide, Table, TableBody, TableCell, TableContainer, TableHead, TableRow, Typography } from '@material-ui/core';\nimport { useStyles } from '../utils/styles';\nimport { CART_RETRIEVE_SUCCESS } from '../utils/constants';\nimport dynamic from 'next/dynamic';\nimport Link from 'next/link';\nimport Router from 'next/router';\nimport getCommerce from '../utils/commerce';\n\nfunction Cart(props) {\n  const classes = useStyles();\n  const {\n    state,\n    dispatch\n  } = useContext(Store);\n  const {\n    cart\n  } = state;\n\n  const removeFromCartHandler = async lineItem => {\n    const commerce = getCommerce(props.commercePublicKey);\n    const cartData = await commerce.cart.remove(lineItem.id);\n    dispatch({\n      type: CART_RETRIEVE_SUCCESS,\n      payload: cartData.cart\n    });\n  };\n\n  const quantityChangeHandler = async (lineItem, quantity) => {\n    const commerce = getCommerce(props.commercePublicKey);\n    const cartData = await commerce.cart.update(lineItem.id, {\n      quantity\n    });\n    dispatch({\n      type: CART_RETRIEVE_SUCCESS,\n      payload: cartData.cart\n    });\n  };\n\n  const proccessToCheckout = () => {\n    Router.push('/checkout');\n  };\n\n  return /*#__PURE__*/_jsx(Layout, {\n    commercePublicKey: props.commercePublicKey,\n    title: \"Shopping Cart\",\n    children: cart.loading ? /*#__PURE__*/_jsx(CircularProgress, {}) : cart.data.line_items.length === 0 ? /*#__PURE__*/_jsxs(Alert, {\n      icon: false,\n      severity: \"error\",\n      children: [\"Cart is empty. \", /*#__PURE__*/_jsx(Link, {\n        href: \"/\",\n        children: \"Go shopping\"\n      })]\n    }) : /*#__PURE__*/_jsxs(React.Fragment, {\n      children: [/*#__PURE__*/_jsx(Typography, {\n        variant: \"h1\",\n        component: \"h1\",\n        children: \"Shopping Cart\"\n      }), /*#__PURE__*/_jsx(Slide, {\n        direction: \"up\",\n        in: true,\n        children: /*#__PURE__*/_jsxs(Grid, {\n          container: true,\n          spacing: 1,\n          children: [/*#__PURE__*/_jsx(Grid, {\n            item: true,\n            md: 9,\n            children: /*#__PURE__*/_jsx(Grid, {\n              container: true,\n              children: /*#__PURE__*/_jsx(TableContainer, {\n                children: /*#__PURE__*/_jsxs(Table, {\n                  \"aria-label\": \"Orders\",\n                  children: [/*#__PURE__*/_jsx(TableHead, {\n                    children: /*#__PURE__*/_jsxs(TableRow, {\n                      children: [/*#__PURE__*/_jsx(TableCell, {\n                        children: \"Name\"\n                      }), /*#__PURE__*/_jsx(TableCell, {\n                        align: \"right\",\n                        children: \"Quantity\"\n                      }), /*#__PURE__*/_jsx(TableCell, {\n                        align: \"right\",\n                        children: \"Price\"\n                      }), /*#__PURE__*/_jsx(TableCell, {\n                        align: \"right\",\n                        children: \"Action\"\n                      })]\n                    })\n                  }), /*#__PURE__*/_jsx(TableBody, {\n                    children: cart.data.line_items.map(cartItem => /*#__PURE__*/_jsxs(TableRow, {\n                      children: [/*#__PURE__*/_jsx(TableCell, {\n                        component: \"th\",\n                        scope: \"row\",\n                        children: cartItem.name\n                      }), /*#__PURE__*/_jsx(TableCell, {\n                        align: \"right\",\n                        children: /*#__PURE__*/_jsx(Select, {\n                          labelId: \"quanitity-label\",\n                          id: \"quanitity\",\n                          onChange: e => quantityChangeHandler(cartItem, e.target.value),\n                          value: cartItem.quantity,\n                          children: [...Array(10).keys()].map(x => /*#__PURE__*/_jsx(MenuItem, {\n                            value: x + 1,\n                            children: x + 1\n                          }, x + 1))\n                        })\n                      }), /*#__PURE__*/_jsx(TableCell, {\n                        align: \"right\",\n                        children: cartItem.price.formatted_with_symbol\n                      }), /*#__PURE__*/_jsx(TableCell, {\n                        align: \"right\",\n                        children: /*#__PURE__*/_jsx(Button, {\n                          onClick: () => removeFromCartHandler(cartItem),\n                          variant: \"contained\",\n                          color: \"secondary\",\n                          children: \"x\"\n                        })\n                      })]\n                    }, cartItem.name))\n                  })]\n                })\n              })\n            })\n          }), /*#__PURE__*/_jsx(Grid, {\n            item: true,\n            md: 3,\n            xs: 12,\n            children: /*#__PURE__*/_jsx(Card, {\n              className: classes.card,\n              children: /*#__PURE__*/_jsxs(List, {\n                children: [/*#__PURE__*/_jsx(ListItem, {\n                  children: /*#__PURE__*/_jsx(Grid, {\n                    container: true,\n                    children: /*#__PURE__*/_jsxs(Typography, {\n                      variant: \"h6\",\n                      children: [\"Subtotal: \", cart.data.subtotal.formatted_with_symbol]\n                    })\n                  })\n                }), /*#__PURE__*/_jsx(ListItem, {\n                  children: cart.data.total_items > 0 && /*#__PURE__*/_jsx(Button, {\n                    type: \"button\",\n                    fullWidth: true,\n                    variant: \"contained\",\n                    color: \"primary\",\n                    onClick: proccessToCheckout,\n                    children: \"Proceed to checkout\"\n                  })\n                })]\n              })\n            })\n          })]\n        })\n      })]\n    })\n  });\n}\n\nexport default dynamic(() => Promise.resolve(Cart), {\n  ssr: false\n});","map":null,"metadata":{},"sourceType":"module"}