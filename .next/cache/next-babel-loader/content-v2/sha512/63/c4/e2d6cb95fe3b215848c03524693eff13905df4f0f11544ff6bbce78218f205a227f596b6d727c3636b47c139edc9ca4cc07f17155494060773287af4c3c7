{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport React, { useContext, useState } from 'react';\nimport { Alert } from '@material-ui/lab';\nimport getCommerce from '../../utils/commerce';\nimport { Box, Button, Card, Grid, List, ListItem, MenuItem, Select, Slide, Typography } from '@material-ui/core';\nimport { useStyles } from '../../utils/styles';\nimport Layout from '../../components/Layout';\nimport { Store } from '../../components/Store';\nimport Router from 'next/router';\nimport { CART_RETRIEVE_SUCCESS } from '../../utils/constants';\nexport default function Home(props) {\n  const classes = useStyles();\n  const {\n    state,\n    dispatch\n  } = useContext(Store);\n  const {\n    userInfo,\n    cart\n  } = state;\n  const {\n    0: quantity,\n    1: setQuantity\n  } = useState(1);\n  const {\n    product\n  } = props;\n\n  const addToCartHandler = async () => {\n    const commerce = getCommerce(props.commercePublicKey);\n    const lineItem = cart.data.line_items.find(x => x.product_id === product.id);\n\n    if (lineItem) {\n      const cartData = await commerce.cart.update(lineItem.id, {\n        quantity: quantity\n      });\n      dispatch({\n        type: CART_RETRIEVE_SUCCESS,\n        payload: cartData.cart\n      });\n      Router.push('/cart');\n    } else {\n      const cartData = await commerce.cart.add(product.id, quantity);\n      dispatch({\n        type: CART_RETRIEVE_SUCCESS,\n        payload: cartData.cart\n      });\n      Router.push('/cart');\n    }\n  };\n\n  return /*#__PURE__*/_jsx(Layout, {\n    userInfo: userInfo,\n    title: product.name,\n    commercePublicKey: props.commercePublicKey,\n    children: /*#__PURE__*/_jsx(Slide, {\n      direction: \"up\",\n      in: true,\n      children: /*#__PURE__*/_jsxs(Grid, {\n        container: true,\n        spacing: 1,\n        children: [/*#__PURE__*/_jsx(Grid, {\n          item: true,\n          md: 6,\n          children: /*#__PURE__*/_jsx(\"img\", {\n            src: product.media.source,\n            alt: product.name,\n            className: classes.largeImage\n          })\n        }), /*#__PURE__*/_jsx(Grid, {\n          item: true,\n          md: 3,\n          xs: 12,\n          children: /*#__PURE__*/_jsxs(List, {\n            children: [/*#__PURE__*/_jsx(ListItem, {\n              children: /*#__PURE__*/_jsx(Typography, {\n                gutterBottom: true,\n                variant: \"h6\",\n                color: \"textPrimary\",\n                component: \"h1\",\n                children: product.name\n              })\n            }), /*#__PURE__*/_jsx(ListItem, {\n              children: /*#__PURE__*/_jsx(Box, {\n                dangerouslySetInnerHTML: {\n                  __html: product.description\n                }\n              })\n            })]\n          })\n        }), /*#__PURE__*/_jsx(Grid, {\n          item: true,\n          md: 3,\n          xs: 12,\n          children: /*#__PURE__*/_jsx(Card, {\n            children: /*#__PURE__*/_jsxs(List, {\n              children: [/*#__PURE__*/_jsx(ListItem, {\n                children: /*#__PURE__*/_jsxs(Grid, {\n                  container: true,\n                  children: [/*#__PURE__*/_jsx(Grid, {\n                    item: true,\n                    xs: 6,\n                    children: \"Price\"\n                  }), /*#__PURE__*/_jsx(Grid, {\n                    item: true,\n                    xs: 6,\n                    children: product.price.formatted_with_symbol\n                  })]\n                })\n              }), /*#__PURE__*/_jsx(ListItem, {\n                children: /*#__PURE__*/_jsxs(Grid, {\n                  alignItems: \"center\",\n                  container: true,\n                  children: [/*#__PURE__*/_jsx(Grid, {\n                    item: true,\n                    xs: 6,\n                    children: \"Status\"\n                  }), /*#__PURE__*/_jsx(Grid, {\n                    item: true,\n                    xs: 6,\n                    children: product.quantity > 0 ? /*#__PURE__*/_jsx(Alert, {\n                      icon: false,\n                      severity: \"success\",\n                      children: \"In Stock\"\n                    }) : /*#__PURE__*/_jsx(Alert, {\n                      icon: false,\n                      severity: \"error\",\n                      children: \"Unavailable\"\n                    })\n                  })]\n                })\n              }), product.quantity > 0 && /*#__PURE__*/_jsxs(_Fragment, {\n                children: [/*#__PURE__*/_jsx(ListItem, {\n                  children: /*#__PURE__*/_jsxs(Grid, {\n                    container: true,\n                    justify: \"flex-end\",\n                    children: [/*#__PURE__*/_jsx(Grid, {\n                      item: true,\n                      xs: 6,\n                      children: \"Quantity\"\n                    }), /*#__PURE__*/_jsx(Grid, {\n                      item: true,\n                      xs: 6,\n                      children: /*#__PURE__*/_jsx(Select, {\n                        labelId: \"quanitity-label\",\n                        id: \"quanitity\",\n                        fullWidth: true,\n                        onChange: e => setQuantity(e.target.value),\n                        value: quantity,\n                        children: [...Array(product.quantity).keys()].map(x => /*#__PURE__*/_jsx(MenuItem, {\n                          value: x + 1,\n                          children: x + 1\n                        }, x + 1))\n                      })\n                    })]\n                  })\n                }), /*#__PURE__*/_jsx(ListItem, {\n                  children: /*#__PURE__*/_jsx(Button, {\n                    type: \"button\",\n                    fullWidth: true,\n                    variant: \"contained\",\n                    color: \"primary\",\n                    onClick: addToCartHandler,\n                    children: \"Add to cart\"\n                  })\n                })]\n              })]\n            })\n          })\n        })]\n      })\n    }, product.name)\n  });\n}\nexport async function getServerSideProps({\n  params\n}) {\n  const {\n    id\n  } = params;\n  const commerce = getCommerce();\n  const product = await commerce.products.retrieve(id, {\n    type: 'permalink'\n  });\n  return {\n    props: {\n      product\n    }\n  };\n}","map":null,"metadata":{},"sourceType":"module"}