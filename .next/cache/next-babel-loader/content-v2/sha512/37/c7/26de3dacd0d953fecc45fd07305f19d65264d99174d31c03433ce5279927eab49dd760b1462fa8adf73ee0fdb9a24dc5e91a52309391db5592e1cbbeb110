{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\thetn\\\\OneDrive\\\\Desktop\\\\ecommpj\\\\pages\\\\checkout.js\";\nimport React, { useContext, useEffect, useState } from 'react';\nimport getCommerce from '../utils/commerce';\nimport Layout from '../components/Layout';\nimport { Box, Button, Card, CircularProgress, FormControl, Grid, InputLabel, List, ListItem, MenuItem, Select, Step, StepLabel, Stepper, TextField, Typography } from '@material-ui/core';\nimport { useStyles } from '../utils/styles';\nimport { Store } from '../components/Store';\nimport Router from 'next/router';\nimport { ORDER_SET } from '../utils/constants';\nimport dynamic from 'next/dynamic';\nimport { Alert } from '@material-ui/lab';\nconst dev = true || true; // remove \"|| true\" in production\n\nfunction Checkout(props) {\n  const classes = useStyles();\n  const {\n    state,\n    dispatch\n  } = useContext(Store);\n  const {\n    cart\n  } = state;\n  const {\n    0: errors,\n    1: setErrors\n  } = useState([]);\n  const {\n    0: checkoutToken,\n    1: setCheckoutToken\n  } = useState({}); // Customer details\n\n  const {\n    0: firstName,\n    1: setFirstName\n  } = useState(dev ? 'Jane' : '');\n  const {\n    0: lastName,\n    1: setLastName\n  } = useState(dev ? 'Doe' : '');\n  const {\n    0: email,\n    1: setEmail\n  } = useState(dev ? 'janedoe@email.com' : ''); // Shipping details\n\n  const {\n    0: shippingName,\n    1: setShippingName\n  } = useState(dev ? 'Jane Doe' : '');\n  const {\n    0: shippingStreet,\n    1: setShippingStreet\n  } = useState(dev ? '123 Fake St' : '');\n  const {\n    0: shippingCity,\n    1: setShippingCity\n  } = useState(dev ? 'Los Angeles' : '');\n  const {\n    0: shippingStateProvince,\n    1: setShippingStateProvince\n  } = useState(dev ? 'AR' : '');\n  const {\n    0: shippingPostalZipCode,\n    1: setShippingPostalZipCode\n  } = useState(dev ? '90089' : '');\n  const {\n    0: shippingCountry,\n    1: setShippingCountry\n  } = useState(dev ? 'GB' : ''); // Payment details\n\n  const {\n    0: cardNum,\n    1: setCardNum\n  } = useState(dev ? '4242 4242 4242 4242' : '');\n  const {\n    0: expMonth,\n    1: setExpMonth\n  } = useState(dev ? '11' : '');\n  const {\n    0: expYear,\n    1: setExpYear\n  } = useState(dev ? '2023' : '');\n  const {\n    0: cvv,\n    1: setCvv\n  } = useState(dev ? '123' : '');\n  const {\n    0: billingPostalZipcode,\n    1: setBillingPostalZipcode\n  } = useState(dev ? '90089' : ''); // Shipping and fulfillment data\n\n  const {\n    0: shippingCountries,\n    1: setShippingCountries\n  } = useState({});\n  const {\n    0: shippingSubdivisions,\n    1: setShippingSubdivisions\n  } = useState({});\n  const {\n    0: shippingOptions,\n    1: setShippingOptions\n  } = useState([]);\n  const {\n    0: shippingOption,\n    1: setShippingOption\n  } = useState({});\n  useEffect(() => {\n    if (!cart.loading) {\n      generateCheckoutToken();\n    }\n  }, [cart.loading]);\n\n  const generateCheckoutToken = async () => {\n    if (cart.data.line_items.length) {\n      const commerce = getCommerce(props.commercePublicKey);\n      const token = await commerce.checkout.generateToken(cart.data.id, {\n        type: 'cart'\n      });\n      setCheckoutToken(token);\n      fetchShippingCountries(token.id);\n    } else {\n      Router.push('/cart');\n    }\n  };\n\n  const fetchShippingCountries = async checkoutTokenId => {\n    const commerce = getCommerce(props.commercePublicKey);\n    const countries = await commerce.services.localeListShippingCountries(checkoutTokenId);\n    setShippingCountries(countries.countries);\n  };\n\n  const fetchSubdivisions = async countryCode => {\n    const commerce = getCommerce(props.commercePublicKey);\n    const subdivisions = await commerce.services.localeListSubdivisions(countryCode);\n    setShippingSubdivisions(subdivisions.subdivisions);\n  };\n\n  const fetchShippingOptions = async (checkoutTokenId, country, stateProvince = null) => {\n    const commerce = getCommerce(props.commercePublicKey);\n    const options = await commerce.checkout.getShippingOptions(checkoutTokenId, {\n      country: country,\n      region: stateProvince\n    });\n    const shippingOption = options[0] ? options[0].id : null;\n    setShippingOption(shippingOption);\n    setShippingOptions(options);\n    console.log(shippingOption);\n  };\n\n  const handleShippingCountryChange = e => {\n    const currentValue = e.target.value;\n    setShippingCountry(e.target.value);\n    fetchSubdivisions(currentValue);\n  };\n\n  const handleSubdivisionChange = e => {\n    const currentValue = e.target.value;\n    setShippingStateProvince(currentValue);\n    fetchShippingOptions(checkoutToken.id, shippingCountry, currentValue);\n  };\n\n  const handleShippingOptionChange = e => {\n    const currentValue = e.target.value;\n    setShippingOption(currentValue);\n    console.log(currentValue);\n  };\n\n  const handleCaptureCheckout = async () => {\n    const orderData = {\n      line_items: checkoutToken.live.line_items,\n      customer: {\n        firstname: firstName,\n        lastname: lastName,\n        email: email\n      },\n      shipping: {\n        name: shippingName,\n        street: shippingStreet,\n        town_city: shippingCity,\n        county_state: shippingStateProvince,\n        postal_zip_code: shippingPostalZipCode,\n        country: shippingCountry\n      },\n      fulfillment: {\n        shipping_method: shippingOption\n      },\n      payment: {\n        gateway: 'test_gateway',\n        card: {\n          number: cardNum,\n          expiry_month: expMonth,\n          expiry_year: expYear,\n          cvc: cvv,\n          postal_zip_code: billingPostalZipcode\n        }\n      }\n    };\n    const commerce = getCommerce(props.commercePublicKey);\n\n    try {\n      const order = await commerce.checkout.capture(checkoutToken.id, orderData);\n      dispatch({\n        type: ORDER_SET,\n        payload: order\n      });\n      localStorage.setItem('order_receipt', JSON.stringify(order));\n      await refreshCart();\n      Router.push('/confirmation');\n    } catch (err) {\n      const errList = [err.data.error.message];\n      const errs = err.data.error.errors;\n\n      for (const index in errs) {\n        errList.push(`${index}: ${errs[index]}`);\n      }\n\n      setErrors(errList);\n    }\n  };\n\n  const refreshCart = async () => {\n    const commerce = getCommerce(props.commercePublicKey);\n    commerce.cart.refresh().then(newCart => {\n      this.setState({\n        cart: newCart\n      });\n    }).catch(error => {\n      console.log('There was an error refreshing your cart', error);\n    });\n  };\n\n  const [activeStep, setActiveStep] = React.useState(0);\n  const steps = getSteps();\n\n  const handleNext = () => {\n    setActiveStep(prevActiveStep => prevActiveStep + 1);\n\n    if (activeStep === steps.length - 1) {\n      handleCaptureCheckout();\n    }\n  };\n\n  const handleBack = () => {\n    setErrors([]);\n    setActiveStep(prevActiveStep => prevActiveStep - 1);\n  };\n\n  function getSteps() {\n    return ['Customer information', 'Shipping details', 'Payment information'];\n  }\n\n  function getStepContent(step) {\n    switch (step) {\n      case 0:\n        return /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(TextField, {\n            variant: \"outlined\",\n            margin: \"normal\",\n            required: true,\n            fullWidth: true,\n            id: \"firstName\",\n            label: \"First Name\",\n            name: \"firstName\",\n            value: firstName,\n            onChange: e => setFirstName(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 231,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(TextField, {\n            variant: \"outlined\",\n            margin: \"normal\",\n            required: true,\n            fullWidth: true,\n            id: \"lastName\",\n            label: \"Last Name\",\n            name: \"lastName\",\n            value: lastName,\n            onChange: e => setLastName(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 242,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(TextField, {\n            variant: \"outlined\",\n            margin: \"normal\",\n            required: true,\n            fullWidth: true,\n            id: \"email\",\n            label: \"Email\",\n            name: \"email\",\n            value: email,\n            onChange: e => setEmail(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 253,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true);\n\n      case 1:\n        return /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(TextField, {\n            variant: \"outlined\",\n            margin: \"normal\",\n            required: true,\n            fullWidth: true,\n            id: \"shippingName\",\n            label: \"Full Name\",\n            name: \"name\",\n            value: shippingName,\n            onChange: e => setShippingName(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 269,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(TextField, {\n            variant: \"outlined\",\n            margin: \"normal\",\n            required: true,\n            fullWidth: true,\n            id: \"shippingStreet\",\n            label: \"Street\",\n            name: \"address\",\n            value: shippingStreet,\n            onChange: e => setShippingStreet(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 280,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(TextField, {\n            variant: \"outlined\",\n            margin: \"normal\",\n            required: true,\n            fullWidth: true,\n            id: \"shippingCity\",\n            label: \"City\",\n            name: \"city\",\n            value: shippingCity,\n            onChange: e => setShippingCity(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 291,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(TextField, {\n            variant: \"outlined\",\n            margin: \"normal\",\n            required: true,\n            fullWidth: true,\n            id: \"shippingPostalZipCode\",\n            label: \"Postal/Zip Code\",\n            name: \"postalCode\",\n            value: shippingPostalZipCode,\n            onChange: e => setShippingPostalZipCode(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 302,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n            className: classes.formControl,\n            children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n              id: \"shippingCountry-label\",\n              children: \"Country\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 314,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Select, {\n              labelId: \"shippingCountry-label\",\n              id: \"shippingCountry\",\n              label: \"Country\",\n              fullWidth: true,\n              onChange: handleShippingCountryChange,\n              value: shippingCountry,\n              children: Object.keys(shippingCountries).map(index => /*#__PURE__*/_jsxDEV(MenuItem, {\n                value: index,\n                children: shippingCountries[index]\n              }, index, false, {\n                fileName: _jsxFileName,\n                lineNumber: 324,\n                columnNumber: 19\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 315,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 313,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n            className: classes.formControl,\n            children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n              id: \"shippingStateProvince-label\",\n              children: \"State / Province\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 331,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Select, {\n              labelId: \"shippingStateProvince-label\",\n              id: \"shippingStateProvince\",\n              label: \"State/Province\",\n              fullWidth: true,\n              onChange: handleSubdivisionChange,\n              value: shippingStateProvince,\n              required: true,\n              className: classes.mt1,\n              children: Object.keys(shippingSubdivisions).map(index => /*#__PURE__*/_jsxDEV(MenuItem, {\n                value: index,\n                children: shippingSubdivisions[index]\n              }, index, false, {\n                fileName: _jsxFileName,\n                lineNumber: 346,\n                columnNumber: 19\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 335,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 330,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n            className: classes.formControl,\n            children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n              id: \"shippingOption-label\",\n              children: \"Shipping Option\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 353,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Select, {\n              labelId: \"shippingOption-label\",\n              id: \"shippingOption\",\n              label: \"Shipping Option\",\n              fullWidth: true,\n              onChange: handleShippingOptionChange,\n              value: shippingOption,\n              required: true,\n              className: classes.mt1,\n              children: shippingOptions.map((method, index) => /*#__PURE__*/_jsxDEV(MenuItem, {\n                value: method.id,\n                children: `${method.description} - $${method.price.formatted_with_code}`\n              }, index, false, {\n                fileName: _jsxFileName,\n                lineNumber: 366,\n                columnNumber: 19\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 355,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 352,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true);\n\n      case 2:\n        return /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(TextField, {\n            variant: \"outlined\",\n            margin: \"normal\",\n            required: true,\n            fullWidth: true,\n            id: \"cardNum\",\n            label: \"Card Number\",\n            name: \"cardNum\",\n            value: cardNum,\n            onChange: e => setCardNum(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 378,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(TextField, {\n            variant: \"outlined\",\n            margin: \"normal\",\n            required: true,\n            fullWidth: true,\n            id: \"expMonth\",\n            label: \"Expiry Month\",\n            name: \"expMonth\",\n            value: expMonth,\n            onChange: e => setExpMonth(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 389,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(TextField, {\n            variant: \"outlined\",\n            margin: \"normal\",\n            required: true,\n            fullWidth: true,\n            id: \"expYear\",\n            label: \"Expiry Year\",\n            name: \"expYear\",\n            value: expYear,\n            onChange: e => setExpYear(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 400,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(TextField, {\n            variant: \"outlined\",\n            margin: \"normal\",\n            required: true,\n            fullWidth: true,\n            id: \"cvv\",\n            label: \"CVV\",\n            name: \"cvv\",\n            value: cvv,\n            onChange: e => setCvv(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 411,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(TextField, {\n            variant: \"outlined\",\n            margin: \"normal\",\n            required: true,\n            fullWidth: true,\n            id: \"billingPostalZipcode\",\n            label: \"Postal/Zip Code\",\n            name: \"postalCode\",\n            value: billingPostalZipcode,\n            onChange: e => setBillingPostalZipcode(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 422,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true);\n\n      default:\n        return 'Unknown step';\n    }\n  }\n\n  const renderCheckoutForm = () => {\n    return /*#__PURE__*/_jsxDEV(\"form\", {\n      children: [/*#__PURE__*/_jsxDEV(Stepper, {\n        activeStep: activeStep,\n        alternativeLabel: true,\n        children: steps.map(label => /*#__PURE__*/_jsxDEV(Step, {\n          children: /*#__PURE__*/_jsxDEV(StepLabel, {\n            children: label\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 446,\n            columnNumber: 15\n          }, this)\n        }, label, false, {\n          fileName: _jsxFileName,\n          lineNumber: 445,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 443,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        children: activeStep === steps.length ? errors && errors.length > 0 ? /*#__PURE__*/_jsxDEV(Box, {\n          children: [/*#__PURE__*/_jsxDEV(List, {\n            children: errors.map(error => /*#__PURE__*/_jsxDEV(ListItem, {\n              children: /*#__PURE__*/_jsxDEV(Alert, {\n                severity: \"error\",\n                children: error\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 457,\n                columnNumber: 23\n              }, this)\n            }, error, false, {\n              fileName: _jsxFileName,\n              lineNumber: 456,\n              columnNumber: 21\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 454,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Box, {\n            className: classes.mt1,\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              onClick: handleBack,\n              className: classes.button,\n              children: \"Back\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 462,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 461,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 453,\n          columnNumber: 15\n        }, this) : /*#__PURE__*/_jsxDEV(Box, {\n          children: [/*#__PURE__*/_jsxDEV(CircularProgress, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 469,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            className: classes.instructions,\n            children: \"Confirming Order...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 470,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 468,\n          columnNumber: 15\n        }, this) : /*#__PURE__*/_jsxDEV(Box, {\n          children: [getStepContent(activeStep), /*#__PURE__*/_jsxDEV(Box, {\n            className: classes.mt1,\n            children: [/*#__PURE__*/_jsxDEV(Button, {\n              disabled: activeStep === 0,\n              onClick: handleBack,\n              className: classes.button,\n              children: \"Back\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 479,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              variant: \"contained\",\n              color: \"primary\",\n              onClick: handleNext,\n              className: classes.button,\n              children: activeStep === steps.length - 1 ? 'Confirm Order' : 'Next'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 486,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 478,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 476,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 450,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 442,\n      columnNumber: 7\n    }, this);\n  };\n\n  const renderCheckoutSummary = () => {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(List, {\n        children: [/*#__PURE__*/_jsxDEV(ListItem, {\n          children: /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h2\",\n            children: \"Order summary\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 507,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 506,\n          columnNumber: 11\n        }, this), cart.data.line_items.map(lineItem => /*#__PURE__*/_jsxDEV(ListItem, {\n          children: /*#__PURE__*/_jsxDEV(Grid, {\n            container: true,\n            children: [/*#__PURE__*/_jsxDEV(Grid, {\n              xs: 6,\n              item: true,\n              children: [lineItem.quantity, \" x \", lineItem.name]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 513,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              xs: 6,\n              item: true,\n              children: /*#__PURE__*/_jsxDEV(Typography, {\n                align: \"right\",\n                children: lineItem.line_total.formatted_with_symbol\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 517,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 516,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 512,\n            columnNumber: 15\n          }, this)\n        }, lineItem.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 511,\n          columnNumber: 13\n        }, this)), /*#__PURE__*/_jsxDEV(ListItem, {\n          children: /*#__PURE__*/_jsxDEV(Grid, {\n            container: true,\n            children: [/*#__PURE__*/_jsxDEV(Grid, {\n              xs: 6,\n              item: true,\n              children: \"Subtotal\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 526,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              xs: 6,\n              item: true,\n              children: /*#__PURE__*/_jsxDEV(Typography, {\n                align: \"right\",\n                children: cart.data.subtotal.formatted_with_symbol\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 530,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 529,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 525,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 524,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 505,\n        columnNumber: 9\n      }, this)\n    }, void 0, false);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Layout, {\n    title: \"Checkout\",\n    commercePublicKey: props.commercePublicKey,\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      gutterBottom: true,\n      variant: \"h6\",\n      color: \"textPrimary\",\n      component: \"h1\",\n      children: \"Checkout\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 543,\n      columnNumber: 7\n    }, this), cart.loading ? /*#__PURE__*/_jsxDEV(CircularProgress, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 547,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      spacing: 2,\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        md: 8,\n        children: /*#__PURE__*/_jsxDEV(Card, {\n          className: classes.p1,\n          children: renderCheckoutForm()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 551,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 550,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        md: 4,\n        children: /*#__PURE__*/_jsxDEV(Card, {\n          children: renderCheckoutSummary()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 554,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 553,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 549,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 542,\n    columnNumber: 5\n  }, this);\n}\n\nexport default dynamic(() => Promise.resolve(Checkout), {\n  ssr: false\n});","map":{"version":3,"sources":["C:/Users/thetn/OneDrive/Desktop/ecommpj/pages/checkout.js"],"names":["React","useContext","useEffect","useState","getCommerce","Layout","Box","Button","Card","CircularProgress","FormControl","Grid","InputLabel","List","ListItem","MenuItem","Select","Step","StepLabel","Stepper","TextField","Typography","useStyles","Store","Router","ORDER_SET","dynamic","Alert","dev","Checkout","props","classes","state","dispatch","cart","errors","setErrors","checkoutToken","setCheckoutToken","firstName","setFirstName","lastName","setLastName","email","setEmail","shippingName","setShippingName","shippingStreet","setShippingStreet","shippingCity","setShippingCity","shippingStateProvince","setShippingStateProvince","shippingPostalZipCode","setShippingPostalZipCode","shippingCountry","setShippingCountry","cardNum","setCardNum","expMonth","setExpMonth","expYear","setExpYear","cvv","setCvv","billingPostalZipcode","setBillingPostalZipcode","shippingCountries","setShippingCountries","shippingSubdivisions","setShippingSubdivisions","shippingOptions","setShippingOptions","shippingOption","setShippingOption","loading","generateCheckoutToken","data","line_items","length","commerce","commercePublicKey","token","checkout","generateToken","id","type","fetchShippingCountries","push","checkoutTokenId","countries","services","localeListShippingCountries","fetchSubdivisions","countryCode","subdivisions","localeListSubdivisions","fetchShippingOptions","country","stateProvince","options","getShippingOptions","region","console","log","handleShippingCountryChange","e","currentValue","target","value","handleSubdivisionChange","handleShippingOptionChange","handleCaptureCheckout","orderData","live","customer","firstname","lastname","shipping","name","street","town_city","county_state","postal_zip_code","fulfillment","shipping_method","payment","gateway","card","number","expiry_month","expiry_year","cvc","order","capture","payload","localStorage","setItem","JSON","stringify","refreshCart","err","errList","error","message","errs","index","refresh","then","newCart","setState","catch","activeStep","setActiveStep","steps","getSteps","handleNext","prevActiveStep","handleBack","getStepContent","step","formControl","Object","keys","map","mt1","method","description","price","formatted_with_code","renderCheckoutForm","label","button","instructions","renderCheckoutSummary","lineItem","quantity","line_total","formatted_with_symbol","subtotal","p1","Promise","resolve","ssr"],"mappings":"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","sourcesContent":["import React, { useContext, useEffect, useState } from 'react';\nimport getCommerce from '../utils/commerce';\nimport Layout from '../components/Layout';\nimport {\n  Box,\n  Button,\n  Card,\n  CircularProgress,\n  FormControl,\n  Grid,\n  InputLabel,\n  List,\n  ListItem,\n  MenuItem,\n  Select,\n  Step,\n  StepLabel,\n  Stepper,\n  TextField,\n  Typography,\n} from '@material-ui/core';\nimport { useStyles } from '../utils/styles';\nimport { Store } from '../components/Store';\nimport Router from 'next/router';\nimport { ORDER_SET } from '../utils/constants';\nimport dynamic from 'next/dynamic';\nimport { Alert } from '@material-ui/lab';\nconst dev = process.env.NODE_ENV === 'development' || true; // remove \"|| true\" in production\nfunction Checkout(props) {\n  const classes = useStyles();\n\n  const { state, dispatch } = useContext(Store);\n  const { cart } = state;\n\n  const [errors, setErrors] = useState([]);\n  const [checkoutToken, setCheckoutToken] = useState({});\n  // Customer details\n  const [firstName, setFirstName] = useState(dev ? 'Jane' : '');\n  const [lastName, setLastName] = useState(dev ? 'Doe' : '');\n  const [email, setEmail] = useState(dev ? 'janedoe@email.com' : '');\n  // Shipping details\n  const [shippingName, setShippingName] = useState(dev ? 'Jane Doe' : '');\n  const [shippingStreet, setShippingStreet] = useState(\n    dev ? '123 Fake St' : ''\n  );\n  const [shippingCity, setShippingCity] = useState(dev ? 'Los Angeles' : '');\n  const [shippingStateProvince, setShippingStateProvince] = useState(\n    dev ? 'AR' : ''\n  );\n  const [shippingPostalZipCode, setShippingPostalZipCode] = useState(\n    dev ? '90089' : ''\n  );\n  const [shippingCountry, setShippingCountry] = useState(dev ? 'GB' : '');\n  // Payment details\n  const [cardNum, setCardNum] = useState(dev ? '4242 4242 4242 4242' : '');\n  const [expMonth, setExpMonth] = useState(dev ? '11' : '');\n  const [expYear, setExpYear] = useState(dev ? '2023' : '');\n  const [cvv, setCvv] = useState(dev ? '123' : '');\n  const [billingPostalZipcode, setBillingPostalZipcode] = useState(\n    dev ? '90089' : ''\n  );\n  // Shipping and fulfillment data\n  const [shippingCountries, setShippingCountries] = useState({});\n  const [shippingSubdivisions, setShippingSubdivisions] = useState({});\n  const [shippingOptions, setShippingOptions] = useState([]);\n  const [shippingOption, setShippingOption] = useState({});\n\n  useEffect(() => {\n    if (!cart.loading) {\n      generateCheckoutToken();\n    }\n  }, [cart.loading]);\n  const generateCheckoutToken = async () => {\n    if (cart.data.line_items.length) {\n      const commerce = getCommerce(props.commercePublicKey);\n      const token = await commerce.checkout.generateToken(cart.data.id, {\n        type: 'cart',\n      });\n      setCheckoutToken(token);\n      fetchShippingCountries(token.id);\n    } else {\n      Router.push('/cart');\n    }\n  };\n\n  const fetchShippingCountries = async (checkoutTokenId) => {\n    const commerce = getCommerce(props.commercePublicKey);\n    const countries = await commerce.services.localeListShippingCountries(\n      checkoutTokenId\n    );\n    setShippingCountries(countries.countries);\n  };\n\n  const fetchSubdivisions = async (countryCode) => {\n    const commerce = getCommerce(props.commercePublicKey);\n    const subdivisions = await commerce.services.localeListSubdivisions(\n      countryCode\n    );\n    setShippingSubdivisions(subdivisions.subdivisions);\n  };\n\n  const fetchShippingOptions = async (\n    checkoutTokenId,\n    country,\n    stateProvince = null\n  ) => {\n    const commerce = getCommerce(props.commercePublicKey);\n    const options = await commerce.checkout.getShippingOptions(\n      checkoutTokenId,\n      {\n        country: country,\n        region: stateProvince,\n      }\n    );\n\n    const shippingOption = options[0] ? options[0].id : null;\n    setShippingOption(shippingOption);\n    setShippingOptions(options);\n    console.log(shippingOption);\n  };\n\n  const handleShippingCountryChange = (e) => {\n    const currentValue = e.target.value;\n    setShippingCountry(e.target.value);\n    fetchSubdivisions(currentValue);\n  };\n\n  const handleSubdivisionChange = (e) => {\n    const currentValue = e.target.value;\n    setShippingStateProvince(currentValue);\n    fetchShippingOptions(checkoutToken.id, shippingCountry, currentValue);\n  };\n\n  const handleShippingOptionChange = (e) => {\n    const currentValue = e.target.value;\n    setShippingOption(currentValue);\n    console.log(currentValue);\n  };\n\n  const handleCaptureCheckout = async () => {\n    const orderData = {\n      line_items: checkoutToken.live.line_items,\n      customer: {\n        firstname: firstName,\n        lastname: lastName,\n        email: email,\n      },\n      shipping: {\n        name: shippingName,\n        street: shippingStreet,\n        town_city: shippingCity,\n        county_state: shippingStateProvince,\n        postal_zip_code: shippingPostalZipCode,\n        country: shippingCountry,\n      },\n      fulfillment: {\n        shipping_method: shippingOption,\n      },\n      payment: {\n        gateway: 'test_gateway',\n        card: {\n          number: cardNum,\n          expiry_month: expMonth,\n          expiry_year: expYear,\n          cvc: cvv,\n          postal_zip_code: billingPostalZipcode,\n        },\n      },\n    };\n\n    const commerce = getCommerce(props.commercePublicKey);\n    try {\n      const order = await commerce.checkout.capture(\n        checkoutToken.id,\n        orderData\n      );\n      dispatch({ type: ORDER_SET, payload: order });\n      localStorage.setItem('order_receipt', JSON.stringify(order));\n      await refreshCart();\n      Router.push('/confirmation');\n    } catch (err) {\n      const errList = [err.data.error.message];\n      const errs = err.data.error.errors;\n      for (const index in errs) {\n        errList.push(`${index}: ${errs[index]}`);\n      }\n      setErrors(errList);\n    }\n  };\n\n  const refreshCart = async () => {\n    const commerce = getCommerce(props.commercePublicKey);\n\n    commerce.cart\n      .refresh()\n      .then((newCart) => {\n        this.setState({\n          cart: newCart,\n        });\n      })\n      .catch((error) => {\n        console.log('There was an error refreshing your cart', error);\n      });\n  };\n\n  const [activeStep, setActiveStep] = React.useState(0);\n  const steps = getSteps();\n\n  const handleNext = () => {\n    setActiveStep((prevActiveStep) => prevActiveStep + 1);\n\n    if (activeStep === steps.length - 1) {\n      handleCaptureCheckout();\n    }\n  };\n\n  const handleBack = () => {\n    setErrors([]);\n    setActiveStep((prevActiveStep) => prevActiveStep - 1);\n  };\n\n  function getSteps() {\n    return ['Customer information', 'Shipping details', 'Payment information'];\n  }\n\n  function getStepContent(step) {\n    switch (step) {\n      case 0:\n        return (\n          <>\n            <TextField\n              variant=\"outlined\"\n              margin=\"normal\"\n              required\n              fullWidth\n              id=\"firstName\"\n              label=\"First Name\"\n              name=\"firstName\"\n              value={firstName}\n              onChange={(e) => setFirstName(e.target.value)}\n            />\n            <TextField\n              variant=\"outlined\"\n              margin=\"normal\"\n              required\n              fullWidth\n              id=\"lastName\"\n              label=\"Last Name\"\n              name=\"lastName\"\n              value={lastName}\n              onChange={(e) => setLastName(e.target.value)}\n            />\n            <TextField\n              variant=\"outlined\"\n              margin=\"normal\"\n              required\n              fullWidth\n              id=\"email\"\n              label=\"Email\"\n              name=\"email\"\n              value={email}\n              onChange={(e) => setEmail(e.target.value)}\n            />\n          </>\n        );\n      case 1:\n        return (\n          <>\n            <TextField\n              variant=\"outlined\"\n              margin=\"normal\"\n              required\n              fullWidth\n              id=\"shippingName\"\n              label=\"Full Name\"\n              name=\"name\"\n              value={shippingName}\n              onChange={(e) => setShippingName(e.target.value)}\n            />\n            <TextField\n              variant=\"outlined\"\n              margin=\"normal\"\n              required\n              fullWidth\n              id=\"shippingStreet\"\n              label=\"Street\"\n              name=\"address\"\n              value={shippingStreet}\n              onChange={(e) => setShippingStreet(e.target.value)}\n            />\n            <TextField\n              variant=\"outlined\"\n              margin=\"normal\"\n              required\n              fullWidth\n              id=\"shippingCity\"\n              label=\"City\"\n              name=\"city\"\n              value={shippingCity}\n              onChange={(e) => setShippingCity(e.target.value)}\n            />\n            <TextField\n              variant=\"outlined\"\n              margin=\"normal\"\n              required\n              fullWidth\n              id=\"shippingPostalZipCode\"\n              label=\"Postal/Zip Code\"\n              name=\"postalCode\"\n              value={shippingPostalZipCode}\n              onChange={(e) => setShippingPostalZipCode(e.target.value)}\n            />\n            <FormControl className={classes.formControl}>\n              <InputLabel id=\"shippingCountry-label\">Country</InputLabel>\n              <Select\n                labelId=\"shippingCountry-label\"\n                id=\"shippingCountry\"\n                label=\"Country\"\n                fullWidth\n                onChange={handleShippingCountryChange}\n                value={shippingCountry}\n              >\n                {Object.keys(shippingCountries).map((index) => (\n                  <MenuItem value={index} key={index}>\n                    {shippingCountries[index]}\n                  </MenuItem>\n                ))}\n              </Select>\n            </FormControl>\n            <FormControl className={classes.formControl}>\n              <InputLabel id=\"shippingStateProvince-label\">\n                State / Province\n              </InputLabel>\n\n              <Select\n                labelId=\"shippingStateProvince-label\"\n                id=\"shippingStateProvince\"\n                label=\"State/Province\"\n                fullWidth\n                onChange={handleSubdivisionChange}\n                value={shippingStateProvince}\n                required\n                className={classes.mt1}\n              >\n                {Object.keys(shippingSubdivisions).map((index) => (\n                  <MenuItem value={index} key={index}>\n                    {shippingSubdivisions[index]}\n                  </MenuItem>\n                ))}\n              </Select>\n            </FormControl>\n            <FormControl className={classes.formControl}>\n              <InputLabel id=\"shippingOption-label\">Shipping Option</InputLabel>\n\n              <Select\n                labelId=\"shippingOption-label\"\n                id=\"shippingOption\"\n                label=\"Shipping Option\"\n                fullWidth\n                onChange={handleShippingOptionChange}\n                value={shippingOption}\n                required\n                className={classes.mt1}\n              >\n                {shippingOptions.map((method, index) => (\n                  <MenuItem\n                    value={method.id}\n                    key={index}\n                  >{`${method.description} - $${method.price.formatted_with_code}`}</MenuItem>\n                ))}\n              </Select>\n            </FormControl>\n          </>\n        );\n      case 2:\n        return (\n          <>\n            <TextField\n              variant=\"outlined\"\n              margin=\"normal\"\n              required\n              fullWidth\n              id=\"cardNum\"\n              label=\"Card Number\"\n              name=\"cardNum\"\n              value={cardNum}\n              onChange={(e) => setCardNum(e.target.value)}\n            />\n            <TextField\n              variant=\"outlined\"\n              margin=\"normal\"\n              required\n              fullWidth\n              id=\"expMonth\"\n              label=\"Expiry Month\"\n              name=\"expMonth\"\n              value={expMonth}\n              onChange={(e) => setExpMonth(e.target.value)}\n            />\n            <TextField\n              variant=\"outlined\"\n              margin=\"normal\"\n              required\n              fullWidth\n              id=\"expYear\"\n              label=\"Expiry Year\"\n              name=\"expYear\"\n              value={expYear}\n              onChange={(e) => setExpYear(e.target.value)}\n            />\n            <TextField\n              variant=\"outlined\"\n              margin=\"normal\"\n              required\n              fullWidth\n              id=\"cvv\"\n              label=\"CVV\"\n              name=\"cvv\"\n              value={cvv}\n              onChange={(e) => setCvv(e.target.value)}\n            />\n            <TextField\n              variant=\"outlined\"\n              margin=\"normal\"\n              required\n              fullWidth\n              id=\"billingPostalZipcode\"\n              label=\"Postal/Zip Code\"\n              name=\"postalCode\"\n              value={billingPostalZipcode}\n              onChange={(e) => setBillingPostalZipcode(e.target.value)}\n            />\n          </>\n        );\n      default:\n        return 'Unknown step';\n    }\n  }\n\n  const renderCheckoutForm = () => {\n    return (\n      <form>\n        <Stepper activeStep={activeStep} alternativeLabel>\n          {steps.map((label) => (\n            <Step key={label}>\n              <StepLabel>{label}</StepLabel>\n            </Step>\n          ))}\n        </Stepper>\n        <Box>\n          {activeStep === steps.length ? (\n            errors && errors.length > 0 ? (\n              <Box>\n                <List>\n                  {errors.map((error) => (\n                    <ListItem key={error}>\n                      <Alert severity=\"error\">{error}</Alert>\n                    </ListItem>\n                  ))}\n                </List>\n                <Box className={classes.mt1}>\n                  <Button onClick={handleBack} className={classes.button}>\n                    Back\n                  </Button>\n                </Box>\n              </Box>\n            ) : (\n              <Box>\n                <CircularProgress />\n                <Typography className={classes.instructions}>\n                  Confirming Order...\n                </Typography>\n              </Box>\n            )\n          ) : (\n            <Box>\n              {getStepContent(activeStep)}\n              <Box className={classes.mt1}>\n                <Button\n                  disabled={activeStep === 0}\n                  onClick={handleBack}\n                  className={classes.button}\n                >\n                  Back\n                </Button>\n                <Button\n                  variant=\"contained\"\n                  color=\"primary\"\n                  onClick={handleNext}\n                  className={classes.button}\n                >\n                  {activeStep === steps.length - 1 ? 'Confirm Order' : 'Next'}\n                </Button>\n              </Box>\n            </Box>\n          )}\n        </Box>\n      </form>\n    );\n  };\n\n  const renderCheckoutSummary = () => {\n    return (\n      <>\n        <List>\n          <ListItem>\n            <Typography variant=\"h2\">Order summary</Typography>\n          </ListItem>\n\n          {cart.data.line_items.map((lineItem) => (\n            <ListItem key={lineItem.id}>\n              <Grid container>\n                <Grid xs={6} item>\n                  {lineItem.quantity} x {lineItem.name}\n                </Grid>\n                <Grid xs={6} item>\n                  <Typography align=\"right\">\n                    {lineItem.line_total.formatted_with_symbol}\n                  </Typography>\n                </Grid>\n              </Grid>\n            </ListItem>\n          ))}\n          <ListItem>\n            <Grid container>\n              <Grid xs={6} item>\n                Subtotal\n              </Grid>\n              <Grid xs={6} item>\n                <Typography align=\"right\">\n                  {cart.data.subtotal.formatted_with_symbol}\n                </Typography>\n              </Grid>\n            </Grid>\n          </ListItem>\n        </List>\n      </>\n    );\n  };\n\n  return (\n    <Layout title=\"Checkout\" commercePublicKey={props.commercePublicKey}>\n      <Typography gutterBottom variant=\"h6\" color=\"textPrimary\" component=\"h1\">\n        Checkout\n      </Typography>\n      {cart.loading ? (\n        <CircularProgress />\n      ) : (\n        <Grid container spacing={2}>\n          <Grid item md={8}>\n            <Card className={classes.p1}>{renderCheckoutForm()}</Card>\n          </Grid>\n          <Grid item md={4}>\n            <Card>{renderCheckoutSummary()}</Card>\n          </Grid>\n        </Grid>\n      )}\n    </Layout>\n  );\n}\nexport default dynamic(() => Promise.resolve(Checkout), {\n  ssr: false,\n});\n"]},"metadata":{},"sourceType":"module"}